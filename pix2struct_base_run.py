# -*- coding: utf-8 -*-
"""pix2struct_base_run.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oIpFSNp9meH0dK1Y8Zh5wM55X2cLz3b5
"""

!nvidia-smi

!uv pip install -qq poppler-utils
# !apt-get install -y -qq poppler-utils

!uv pip install git+https://github.com/huggingface/transformers pdf2image

from pdf2image import convert_from_path, convert_from_bytes
import torch
from functools import partial
from PIL import Image
from transformers import Pix2StructForConditionalGeneration as psg
from transformers import Pix2StructProcessor as psp

DEVICE = "cuda" if torch.cuda.is_available() else "cpu"
model = psg.from_pretrained("google/pix2struct-docvqa-large").to(DEVICE)
processor = psp.from_pretrained("google/pix2struct-docvqa-large")

def generate(model, processor, img, questions):
  inputs = processor(images=[img for _ in range(len(questions))],
           text=questions, return_tensors="pt").to(DEVICE)
  predictions = model.generate(**inputs, max_new_tokens=1028)
  return zip(questions, processor.batch_decode(predictions, skip_special_tokens=True))

def convert_pdf_to_image(filename, page_no):
    return convert_from_path(filename)[page_no-1]

questions = ["what is the name of the manufacturer?",
             "What is the Asset Type?",
             "What is the Product Description?",
             "What is Heat Number?",
             "What is Heat Code?"]
FILENAME = "/content/sample.pdf"

PAGE_NO = 1

image = convert_pdf_to_image(FILENAME, PAGE_NO)
print("pdf to image conversion complete.")
generator = partial(generate, model, processor)
completions = generator(image, questions)
for completion in completions:
    print(f"{completion}")

